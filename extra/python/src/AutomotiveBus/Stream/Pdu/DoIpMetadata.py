# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Pdu

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class DoIpMetadata(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = DoIpMetadata()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsDoIpMetadata(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def DoIpMetadataBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x53\x50\x44\x55", size_prefixed=size_prefixed)

    # DoIpMetadata
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # DoIP: Protocol Version.
    # DoIpMetadata
    def ProtocolVersion(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # DoIP: Payload Type.
    # DoIpMetadata
    def PayloadType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint16Flags, o + self._tab.Pos)
        return 0

def Start(builder): builder.StartObject(2)
def DoIpMetadataStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddProtocolVersion(builder, protocolVersion): builder.PrependUint8Slot(0, protocolVersion, 0)
def DoIpMetadataAddProtocolVersion(builder, protocolVersion):
    """This method is deprecated. Please switch to AddProtocolVersion."""
    return AddProtocolVersion(builder, protocolVersion)
def AddPayloadType(builder, payloadType): builder.PrependUint16Slot(1, payloadType, 0)
def DoIpMetadataAddPayloadType(builder, payloadType):
    """This method is deprecated. Please switch to AddPayloadType."""
    return AddPayloadType(builder, payloadType)
def End(builder): return builder.EndObject()
def DoIpMetadataEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)