# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Pdu

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class IpAddressV6(object):
    __slots__ = ['_tab']

    @classmethod
    def SizeOf(cls):
        return 16

    # IpAddressV6
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # IpAddressV6
    def V0(self): return self._tab.Get(flatbuffers.number_types.Uint16Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(0))
    # IpAddressV6
    def V1(self): return self._tab.Get(flatbuffers.number_types.Uint16Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(2))
    # IpAddressV6
    def V2(self): return self._tab.Get(flatbuffers.number_types.Uint16Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(4))
    # IpAddressV6
    def V3(self): return self._tab.Get(flatbuffers.number_types.Uint16Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(6))
    # IpAddressV6
    def V4(self): return self._tab.Get(flatbuffers.number_types.Uint16Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(8))
    # IpAddressV6
    def V5(self): return self._tab.Get(flatbuffers.number_types.Uint16Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(10))
    # IpAddressV6
    def V6(self): return self._tab.Get(flatbuffers.number_types.Uint16Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(12))
    # IpAddressV6
    def V7(self): return self._tab.Get(flatbuffers.number_types.Uint16Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(14))

def CreateIpAddressV6(builder, v0, v1, v2, v3, v4, v5, v6, v7):
    builder.Prep(2, 16)
    builder.PrependUint16(v7)
    builder.PrependUint16(v6)
    builder.PrependUint16(v5)
    builder.PrependUint16(v4)
    builder.PrependUint16(v3)
    builder.PrependUint16(v2)
    builder.PrependUint16(v1)
    builder.PrependUint16(v0)
    return builder.Offset()
