# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Pdu

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class IpV6(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = IpV6()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsIpV6(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def IpV6BufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x53\x50\x44\x55", size_prefixed=size_prefixed)

    # IpV6
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # IpV6
    def SrcAddr(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = o + self._tab.Pos
            from AutomotiveBus.Stream.Pdu.IpAddressV6 import IpAddressV6
            obj = IpAddressV6()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # IpV6
    def DstAddr(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = o + self._tab.Pos
            from AutomotiveBus.Stream.Pdu.IpAddressV6 import IpAddressV6
            obj = IpAddressV6()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def Start(builder): builder.StartObject(2)
def IpV6Start(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddSrcAddr(builder, srcAddr): builder.PrependStructSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(srcAddr), 0)
def IpV6AddSrcAddr(builder, srcAddr):
    """This method is deprecated. Please switch to AddSrcAddr."""
    return AddSrcAddr(builder, srcAddr)
def AddDstAddr(builder, dstAddr): builder.PrependStructSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(dstAddr), 0)
def IpV6AddDstAddr(builder, dstAddr):
    """This method is deprecated. Please switch to AddDstAddr."""
    return AddDstAddr(builder, dstAddr)
def End(builder): return builder.EndObject()
def IpV6End(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)