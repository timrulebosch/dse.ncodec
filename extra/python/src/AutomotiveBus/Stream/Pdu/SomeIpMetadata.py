# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Pdu

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class SomeIpMetadata(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = SomeIpMetadata()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsSomeIpMetadata(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def SomeIpMetadataBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x53\x50\x44\x55", size_prefixed=size_prefixed)

    # SomeIpMetadata
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # SOME/IP: Message ID.
    # SomeIpMetadata
    def MessageId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # SOME/IP: Message Length.
    # SomeIpMetadata
    def Length(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # SOME/IP: Request ID.
    # SomeIpMetadata
    def RequestId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # SOME/IP: Protocol Version.
    # SomeIpMetadata
    def ProtocolVersion(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # SOME/IP: Interface Version.
    # SomeIpMetadata
    def InterfaceVersion(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # SOME/IP: Message Type.
    # SomeIpMetadata
    def MessageType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # SOME/IP: Return code.
    # SomeIpMetadata
    def ReturnCode(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

def Start(builder): builder.StartObject(7)
def SomeIpMetadataStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddMessageId(builder, messageId): builder.PrependUint32Slot(0, messageId, 0)
def SomeIpMetadataAddMessageId(builder, messageId):
    """This method is deprecated. Please switch to AddMessageId."""
    return AddMessageId(builder, messageId)
def AddLength(builder, length): builder.PrependUint32Slot(1, length, 0)
def SomeIpMetadataAddLength(builder, length):
    """This method is deprecated. Please switch to AddLength."""
    return AddLength(builder, length)
def AddRequestId(builder, requestId): builder.PrependUint32Slot(2, requestId, 0)
def SomeIpMetadataAddRequestId(builder, requestId):
    """This method is deprecated. Please switch to AddRequestId."""
    return AddRequestId(builder, requestId)
def AddProtocolVersion(builder, protocolVersion): builder.PrependUint8Slot(3, protocolVersion, 0)
def SomeIpMetadataAddProtocolVersion(builder, protocolVersion):
    """This method is deprecated. Please switch to AddProtocolVersion."""
    return AddProtocolVersion(builder, protocolVersion)
def AddInterfaceVersion(builder, interfaceVersion): builder.PrependUint8Slot(4, interfaceVersion, 0)
def SomeIpMetadataAddInterfaceVersion(builder, interfaceVersion):
    """This method is deprecated. Please switch to AddInterfaceVersion."""
    return AddInterfaceVersion(builder, interfaceVersion)
def AddMessageType(builder, messageType): builder.PrependUint8Slot(5, messageType, 0)
def SomeIpMetadataAddMessageType(builder, messageType):
    """This method is deprecated. Please switch to AddMessageType."""
    return AddMessageType(builder, messageType)
def AddReturnCode(builder, returnCode): builder.PrependUint8Slot(6, returnCode, 0)
def SomeIpMetadataAddReturnCode(builder, returnCode):
    """This method is deprecated. Please switch to AddReturnCode."""
    return AddReturnCode(builder, returnCode)
def End(builder): return builder.EndObject()
def SomeIpMetadataEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)