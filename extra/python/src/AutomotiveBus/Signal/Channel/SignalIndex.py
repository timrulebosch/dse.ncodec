# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Channel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class SignalIndex(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = SignalIndex()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsSignalIndex(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def SignalIndexBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x53\x49\x43\x48", size_prefixed=size_prefixed)

    # SignalIndex
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # SignalIndex
    def Indexes(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            from AutomotiveBus.Signal.Channel.SignalLookup import SignalLookup
            obj = SignalLookup()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # SignalIndex
    def IndexesLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # SignalIndex
    def IndexesIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        return o == 0

def Start(builder): builder.StartObject(1)
def SignalIndexStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddIndexes(builder, indexes): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(indexes), 0)
def SignalIndexAddIndexes(builder, indexes):
    """This method is deprecated. Please switch to AddIndexes."""
    return AddIndexes(builder, indexes)
def StartIndexesVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def SignalIndexStartIndexesVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartIndexesVector(builder, numElems)
def End(builder): return builder.EndObject()
def SignalIndexEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)