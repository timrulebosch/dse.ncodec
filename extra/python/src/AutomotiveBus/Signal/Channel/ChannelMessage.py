# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Channel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ChannelMessage(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ChannelMessage()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsChannelMessage(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def ChannelMessageBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x53\x49\x43\x48", size_prefixed=size_prefixed)

    # ChannelMessage
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ChannelMessage
    def ModelUid(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # ChannelMessage
    def MessageType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # ChannelMessage
    def Message(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            from flatbuffers.table import Table
            obj = Table(bytearray(), 0)
            self._tab.Union(obj, o)
            return obj
        return None

    # ChannelMessage
    def ControlCode(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # ChannelMessage
    def Token(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ChannelMessage
    def Rc(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ChannelMessage
    def Response(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def Start(builder): builder.StartObject(7)
def ChannelMessageStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddModelUid(builder, modelUid): builder.PrependUint32Slot(0, modelUid, 0)
def ChannelMessageAddModelUid(builder, modelUid):
    """This method is deprecated. Please switch to AddModelUid."""
    return AddModelUid(builder, modelUid)
def AddMessageType(builder, messageType): builder.PrependUint8Slot(1, messageType, 0)
def ChannelMessageAddMessageType(builder, messageType):
    """This method is deprecated. Please switch to AddMessageType."""
    return AddMessageType(builder, messageType)
def AddMessage(builder, message): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(message), 0)
def ChannelMessageAddMessage(builder, message):
    """This method is deprecated. Please switch to AddMessage."""
    return AddMessage(builder, message)
def AddControlCode(builder, controlCode): builder.PrependUint32Slot(3, controlCode, 0)
def ChannelMessageAddControlCode(builder, controlCode):
    """This method is deprecated. Please switch to AddControlCode."""
    return AddControlCode(builder, controlCode)
def AddToken(builder, token): builder.PrependInt32Slot(4, token, 0)
def ChannelMessageAddToken(builder, token):
    """This method is deprecated. Please switch to AddToken."""
    return AddToken(builder, token)
def AddRc(builder, rc): builder.PrependInt32Slot(5, rc, 0)
def ChannelMessageAddRc(builder, rc):
    """This method is deprecated. Please switch to AddRc."""
    return AddRc(builder, rc)
def AddResponse(builder, response): builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(response), 0)
def ChannelMessageAddResponse(builder, response):
    """This method is deprecated. Please switch to AddResponse."""
    return AddResponse(builder, response)
def End(builder): return builder.EndObject()
def ChannelMessageEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)