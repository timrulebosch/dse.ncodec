# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlexRay

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class MetaFrame(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = MetaFrame()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsMetaFrame(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def MetaFrameBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x52\x49\x46\x52", size_prefixed=size_prefixed)

    # MetaFrame
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # MetaFrame
    def Status(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # MetaFrame
    def Direction(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # MetaFrame
    def ChannelMask(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 1

    # MetaFrame
    def CyclePeriod(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 1

    # MetaFrame
    def CycleOffset(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # MetaFrame
    def Frame(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from AutomotiveBus.Register.FlexRay.Frame import Frame
            obj = Frame()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # MetaFrame
    def Timing(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            x = o + self._tab.Pos
            from AutomotiveBus.Register.FlexRay.MessageTiming import MessageTiming
            obj = MessageTiming()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def Start(builder): builder.StartObject(7)
def MetaFrameStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddStatus(builder, status): builder.PrependInt8Slot(0, status, 0)
def MetaFrameAddStatus(builder, status):
    """This method is deprecated. Please switch to AddStatus."""
    return AddStatus(builder, status)
def AddDirection(builder, direction): builder.PrependInt8Slot(1, direction, 0)
def MetaFrameAddDirection(builder, direction):
    """This method is deprecated. Please switch to AddDirection."""
    return AddDirection(builder, direction)
def AddChannelMask(builder, channelMask): builder.PrependUint8Slot(2, channelMask, 1)
def MetaFrameAddChannelMask(builder, channelMask):
    """This method is deprecated. Please switch to AddChannelMask."""
    return AddChannelMask(builder, channelMask)
def AddCyclePeriod(builder, cyclePeriod): builder.PrependUint8Slot(3, cyclePeriod, 1)
def MetaFrameAddCyclePeriod(builder, cyclePeriod):
    """This method is deprecated. Please switch to AddCyclePeriod."""
    return AddCyclePeriod(builder, cyclePeriod)
def AddCycleOffset(builder, cycleOffset): builder.PrependUint8Slot(4, cycleOffset, 0)
def MetaFrameAddCycleOffset(builder, cycleOffset):
    """This method is deprecated. Please switch to AddCycleOffset."""
    return AddCycleOffset(builder, cycleOffset)
def AddFrame(builder, frame): builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(frame), 0)
def MetaFrameAddFrame(builder, frame):
    """This method is deprecated. Please switch to AddFrame."""
    return AddFrame(builder, frame)
def AddTiming(builder, timing): builder.PrependStructSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(timing), 0)
def MetaFrameAddTiming(builder, timing):
    """This method is deprecated. Please switch to AddTiming."""
    return AddTiming(builder, timing)
def End(builder): return builder.EndObject()
def MetaFrameEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)