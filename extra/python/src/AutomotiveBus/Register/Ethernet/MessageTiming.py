# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Ethernet

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class MessageTiming(object):
    __slots__ = ['_tab']

    @classmethod
    def SizeOf(cls):
        return 24

    # MessageTiming
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # MessageTiming
    def SendRequest(self, obj):
        obj.Init(self._tab.Bytes, self._tab.Pos + 0)
        return obj

    # MessageTiming
    def Arbitration(self, obj):
        obj.Init(self._tab.Bytes, self._tab.Pos + 8)
        return obj

    # MessageTiming
    def Reception(self, obj):
        obj.Init(self._tab.Bytes, self._tab.Pos + 16)
        return obj


def CreateMessageTiming(builder, send_request_psec10, arbitration_psec10, reception_psec10):
    builder.Prep(8, 24)
    builder.Prep(8, 8)
    builder.PrependInt64(reception_psec10)
    builder.Prep(8, 8)
    builder.PrependInt64(arbitration_psec10)
    builder.Prep(8, 8)
    builder.PrependInt64(send_request_psec10)
    return builder.Offset()
